@page "/addproduct"
@inject IProductService productService
@inject ICategoryService categoryService
@inject NavigationManager navigationManager

<PageTitle>Add - Product</PageTitle>

<button class="btn btn-info" @onclick="@(()=> navigationManager.NavigateTo("/products"))">Go back products</button>

<ModuleTitle title="Add product"></ModuleTitle>

<EditForm Model="@product" OnSubmit="@Save">
    <div class="row">
        <div class="col-8 form-group">
            <label for="title" class="col-form-label">Tittle</label>
            <InputText id="tittle" @bind-Value="product.Title" required class="form-control"/>
        </div>
        <div class="col-8 form-group">
            <label for="price" class="col-form-label">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"/>
        </div>
        <div class="col-8 form-group">
            <label for="category" class="col-form-label">Category</label>
            <InputSelect id="category" @bind-Value="product.CategoryId" class="form-control">
            <option> Select category</option>
                @foreach(var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>
        <div class="col-8 form-group">
            <label for="image" class="col-form-label">Image (Url)</label>
            <InputText id="image" @bind-Value="product.Image" required class="form-control"/>
        </div>
        <div class="col-8 form-group">
            <label for="description" class="col-form-label">Description</label>
            <InputTextArea id="description" @bind-Value="product.Description" required class="form-control"/>
        </div>
        <div class="col-8 form-group">
            <label for="creationAt" class="col-form-label">Creation At</label>
            <InputDate id="creationAt" @bind-Value="product.CreationAt" required class="form-control"/>
        </div>
        <div class="col-8 form-group">
            <label for="updatedAt" class="col-form-label">Updated At</label>
            <InputDate id="updatedAt" @bind-Value="product.UpdatedAt" required class="form-control"/>
        </div>
    </div>
    <hr/>
    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>

@code
{
    private Product product = new();
    private List<Category> categories = new List<Category>();
    
    protected override async Task OnInitializedAsync()
    {
        categories = await categoryService.Get();
    }
    private async Task Save()
    {
        product.Images = new string [1] {product.Image};
        await productService.Add(product);
        navigationManager.NavigateTo("/products");
    }
}